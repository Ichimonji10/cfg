---
- name: Assert that required variables are defined
  assert:
    that:
      - netctl_routers_dmz_if is defined
      - netctl_routers_lan_if is defined
      - netctl_routers_wan_if is defined
      - netctl_routers_wap_if is defined

- block:

    - name: Install netctl
      pacman:
        name: netctl

    - name: Install netctl profiles
      template:
        src: "{{ item }}"
        dest: /etc/netctl/{{ item }}
      notify: Restart netctl@{{ item }}.service
      loop:
        - dmz
        - lan
        - wan
        - wap
      register: result

    # This task may look pointless when the systemd module can also enable and
    # disable units. However, netctl does more than systemd:
    #
    # * `netctl enable $profile` also creates a netctl@${profile}.service unit.
    # * `netctl disable $profile` also deletes a netctl@${profile}.service unit.
    # * `netctl reenable $profile` is a combination of `disable` and `enable`.
    #   It's especially useful for updating units. (`netctl enable $profile`
    #   loudly refuses to update existing units.)
    #
    # Thus, `netctl reenable` must be invoked before systemd can work with the
    # desired units.
    - name: Create or update netctl services
      command: netctl reenable {{ item }}
      loop:
        - dmz
        - lan
        - wan
        - wap
      when: result is changed
      tags: skip_ansible_lint

    - name: Start and enable netctl services
      systemd:
        name: netctl@{{ item }}.service
        state: started
        enabled: true
        daemon_reload: true
      loop:
        - dmz
        - lan
        - wan
        - wap

  become: true

# `failed_when: false` because unit may not exist
- name: Stop and disable netctl@wlan.service
  systemd:
    name: netctl@wlan.service
    state: stopped
    enabled: false
  become: true
  failed_when: false

- name: Check if the wlan netctl profile exists
  stat:
    path: /etc/netctl/wlan.service
  register: result

- name: Disable the netctl wlan profile
  command: netctl disable wlan
  become: true
  when: result.stat.exists
