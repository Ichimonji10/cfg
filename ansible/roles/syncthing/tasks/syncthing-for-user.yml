---
- name: "Get {{ syncthing_username }}'s lingering state"
  command: loginctl --property Linger --value show-user {{ syncthing_username }}
  changed_when: false
  check_mode: false
  failed_when: false
  register: result

# Spawn a user manager for this user at system start-up time. This allows enabled user units to
# start without that user being logged in.
- name: Enable lingering for {{ syncthing_username }}
  command: loginctl enable-linger {{ syncthing_username }}
  become: true
  become_user: '{{ syncthing_username }}'
  when:
    - '"servers" in group_names'
    - result.stdout != 'yes'

- name: Get passwd information about {{ syncthing_username }}
  getent:
    database: passwd
    key: '{{ syncthing_username }}'
    split: ':'

# XDG_RUNTIME_DIR must be set, or else the systemd module will be unable to
# contact the user's DBus instance. In no particular order, see:
#
# https://github.com/ansible/ansible/issues/27631
# https://stackoverflow.com/questions/34167257/can-i-control-a-user-systemd-using-systemctl-user-after-sudo-su-myuser
# https://uggedal.com/journal/ansible-systemd-user/
# https://unix.stackexchange.com/questions/346841/why-does-sudo-i-not-set-xdg-runtime-dir-for-the-target-user
# https://www.freedesktop.org/software/systemd/man/pam_systemd.html
- name: Start and enable syncthing for {{ syncthing_username }}
  systemd:
    name: syncthing.service
    state: started
    enabled: true
    scope: user
    daemon_reload: true
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ getent_passwd[syncthing_username][1] }}
  become: true
  become_user: "{{ syncthing_username }}"
