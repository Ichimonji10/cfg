upstream api {
    server funkwhale-api:5000;
}

# required for websocket support
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name funkwhale.jerebear.name;
    return 301 https://funkwhale.jerebear.name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name funkwhale.jerebear.name;
    ssl_certificate ssl/funkwhale.jerebear.name.chained.crt;
    ssl_certificate_key ssl/funkwhale.jerebear.name.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;  # SSLv3 is insecure

    # The "funkwhale-api" service (defined in the Compose file) dynamically generates a frontend.
    # The frontend files are accessible to nginx via a shared volume. This "root" option should be
    # set to wherever that volume is mounted.
    root /frontend;  # {{ FUNKWHALE_FRONTEND_PATH }}

    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:";
    add_header Referrer-Policy "strict-origin-when-cross-origin";


    location / {
        include /etc/nginx/funkwhale_proxy.conf;
        # For file uploads.
        client_max_body_size 200M;
        proxy_pass http://api/;
    }

    location /front/ {
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Service-Worker-Allowed "/";
        add_header X-Frame-Options "ALLOW";
        alias /frontend/;  # {{ FUNKWHALE_FRONTEND_PATH }}
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location /front/embed.html {
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        add_header X-Frame-Options "ALLOW";
        alias /frontend/embed.html;  # {{ FUNKWHALE_FRONTEND_PATH }}
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location /federation/ {
        include /etc/nginx/funkwhale_proxy.conf;
        proxy_pass   http://api/federation/;
    }

    location /.well-known/ {
        include /etc/nginx/funkwhale_proxy.conf;
        proxy_pass   http://api/.well-known/;
    }

    location /media/ {
        alias /srv/funkwhale/data/media/;  # {{ MEDIA_ROOT }}
    }

    location /_protected/media {
        internal;
        alias /srv/funkwhale/data/media/;  # {{ MEDIA_ROOT }}
    }

    location /_protected/music {
        internal;
        alias /srv/funkwhale/data/music/;  # {{ MUSIC_DIRECTORY_PATH }}
    }

    # Static files generated by django.
    location /staticfiles/ {
        alias /srv/funkwhale/data/static/;  # {{ STATIC_ROOT }}
    }
}

# vim:ft=conf:
